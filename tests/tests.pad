{@
from "tests/stmt/for-stmt.pad" import main as forStmtMain
from "tests/stmt/if-stmt.pad" import main as ifStmtMain
from "tests/def/func.pad" import main as funcMain
from "tests/type/types.pad" import main as typesMain
from "tests/struct/struct.pad" import main as structMain
from "tests/mutable-and-immutable/mi.pad" import main as miMain
from "tests/builtin/functions.pad" import main as functionsMain
// from "tests/io/file.pad" import main as fileMain  // Needs implement
from "tests/lib/list.pad" import main as listMain
from "tests/lib/html.pad" import main as htmlMain
from "tests/lib/resource.pad" import main as resourceMain
from "tests/data/dict.pad" import main as dictMain

def allTest():
    case = "all"
    forStmtMain(case)
    ifStmtMain(case)
    funcMain(case)
    structMain(case)
    typesMain(case)
    miMain(case)
    functionsMain(case)
    listMain(case)
    htmlMain(case)
    resourceMain(case)
    dictMain(case)
end

def main():
    name = opts.args(1)
    case = opts.args(2)

    if name == "stmt/for-stmt":
        forStmtMain(case) 
    elif name == "stmt/if-stmt":
        ifStmtMain(case) 
    elif name == "def/func":
        funcMain(case)
    elif name == "struct/struct":
        structMain(case)
    elif name == "lib/list":
        listMain(case)
    elif name == "lib/html":
        htmlMain(case)
    elif name == "lib/resource":
        resourceMain(case)
    elif name == "mutable-and-immutable/mi":
        miMain(case)
    elif name == "data/dict":
        dictMain(case)
    else:
        allTest()
    end

    puts("OK")
end

main()

@}
