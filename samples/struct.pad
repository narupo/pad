{@
    /**
     * File structure
     */
    struct File:
        fileno = nil  // number of file descriptor
        mode = nil  // mode of file
        filename = nil  // file name
        buffer = ""  // buffer for stdout/stderr

        /**
         * Open file by file name and mode
         *
         * @param {str} fname file name
         * @param {str} mode mode
         * @return {object} file object
         */
        def open(fname, mode):
            fp = File()
            fp.fileno = 1
            fp.mode = mode
            fp.filename = fname
            return fp, nil
        end

        /**
         * Close file
         *
         * @param {object} fp file object
         */
        def close(fp):
            fp.fileno = nil
            fp.mode = nil
            fp.filename = nil
            fp.buffer = ""
            return nil
        end

        /**
         * Read file contents
         *
         * @param {object} fin file object
         */
        def read(fin):
            return fin.filename, nil
        end
    end

    struct Template:
        def render(familyName): @}
            This is my favorite things.
            My family name is {: familyName :}.
        {@ end

        def verboseRender(familyName): @}
            Today is very funny day.
            I'm very fine so I want to walk out side.
            {: familyName :} take shoes for me.
        {@ end
    end

    struct Animal:
        name = nil

        def new(name):
            animal = Animal()
            animal.name = name
            return animal
        end

        met show(self):
            puts(self.name)
        end
    end

    def test1():
        // Test of File functions
        fin, err = File.open("file.txt", "r")
        if err != nil:
            eputs("failed to open file")
            return
        end

        contents, err = File.read(fin)
        if err != nil:
            eputs("failed to read contents")
            return
        end

        puts(contents)

        err = File.close(fin)
        if err != nil:
            eputs("failed to close file")
            return
        end
    end

    def test2():
        Template.render("blue")
        T = Template
        T.verboseRender("red")
    end

    def test3():
        animal = Animal.new()
        animal.show()
    end

    test1()
    test2()
    test3()
@}