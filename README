Cap is simple snippet manager for programmer.

Usage:

	cap command [arguments]

The commands are:

	help   display usage
	ls     display cap file list
	cd     display or set current directory path
	cat    display cap file
	run    run script
	pwd    display current working directory
	home   display or set current home directory path
	make   display and make by cap's make roule
	edit   edit cap file
	path   display normalized path of cap file
	alias  add alias of cap's command
	brief  display brief of file
	editor display or set editor path
	deploy deploy files from directory


How to use of Cap?


 You should be set 'home directory' of cap by 'cap home' command at first
using. A 'home directory' path is absolute path, you know.

    $ cap home ~/my/snippets


 Check your 'home directory' in cap by 'cap home' command.

    $ cap home


 Okay. And check display list of 'current working directory' in cap by 'cap ls'
command.

    $ cap ls


 And check display file by 'cap cat' command.

    $ cap cat myfile.txt


 If you may change 'current working directory' in cap by 'cap cd' command.

    $ cap cd ./macdonald


 And check 'current working directory' in cap by 'cap pwd' command.
Yes that's right. Many cap's command is a like a commands of UNIX.
So, there is no longer to be do description. You know.

 Okay. Let to edit your snippet file by 'cap edit' command. Cap do set editor
to 'vi' at default. If your OS is MS Windows, Cap do set editor to
'notepad.exe'.

    $ cap edit menu.txt


 What? You are Emacs user? Hello, RMS. Well, you do set other editor by
'cap editor' command. Before that check your current editor in Cap.

    $ cap editor


 Okay. Let set your editor by 'cap editor' command with a 'which' command.
If you have not a 'which' command, you write absolute path of editor.

    $ cap editor `which emacs`


 Okay. Your current editor is a set editor in Cap.


